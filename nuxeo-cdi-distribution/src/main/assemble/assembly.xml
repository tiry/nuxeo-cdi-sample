<project name="ecp-distribution-tomcat" default="build" xmlns:nx="urn:nuxeo-build"
  xmlns:artifact="urn:nuxeo-artifact">

  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact" />

  <target name="init" unless="init.done">
    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <property name="tomcat" value="nuxeo-cdi-${maven.project.version}-tomcat" />
    <property name="tomcatdir" value="${stagedir}/${tomcat}" />
    <property name="bundles" value="${stagedir}/${tomcat}/nxserver/bundles" />

    <antcall target="cleanoutput" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="expand" unless="no.build">
    <artifact:expand depth="5" />
    <!--<artifact:print output="dependency-tree.log" /> -->
  </target>

  <target name="build" depends="init">
    <echo>Building CDI Core Server Tomcat Distribution</echo>
    <antcall target="cleanstage" />
    <antcall target="build-standard" />
  </target>

  <target name="build-standard" description="Build default distribution"
    depends="init">

    <unzip dest="${stagedir}">
      <artifact:resolveFile
        key="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.addons.version}:zip"
        classifier="coreserver" />
    </unzip>
    <nx:rename from="${stagedir}/coreserver*" to="${tomcatdir}" />

    <!-- delete libs that don't work with CDI/JSF2, some will be added back -->
    <delete failonerror="false">
      <fileset dir="${tomcatdir}/nxserver/lib">
        <include name="jsf-*" />
        <include name="*seam*.jar" />
        <include name="jstl-*" />
        <include name="richfaces*" />
        <include name="javassist*" />
      </fileset>
    </delete>
    <delete failonerror="false">
      <fileset dir="${tomcatdir}/nxserver/bundles">
        <include name="nuxeo-platform-ui-*" />
        <include name="*seam*.jar" />
      </fileset>
    </delete>

    <!-- copy additional JSF libs to nxserver/lib -->
    <!-- ref: http://docs.jboss.org/richfaces/latest_4_2_X/Developer_Guide/en-US/html/chap-Developer_Guide-Getting_started_with_RichFaces.html -->
    <copy todir="${tomcatdir}/nxserver/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact artifactId="jsf-api" />
          <artifact artifactId="jsf-impl" />
          <artifact artifactId="jstl" />
          <artifact artifactId="richfaces*" />
          <artifact artifactId="guava" />
          <artifact artifactId="cssparser" />
          <artifact artifactId="sac" />
          <artifact artifactId="validation-api" />
          <artifact artifactId="hibernate-validator" />
        </includes>
      </artifact:set>
    </copy>

    <!-- copy Nuxeo JSF modules -->
    <copy todir="${bundles}" overwrite="true">
      <artifact:set>
        <includes>
          <artifact artifactId="nuxeo-platform-ui*" />
          <artifact artifactId="nuxeo-platform-forms*" />
          <artifact artifactId="nuxeo-platform-lang*" />
        </includes>
      </artifact:set>
    </copy>

    <!-- copy Weld libs -->
    <copy todir="${tomcatdir}/nxserver/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact artifactId="cdi-api" />
          <!-- add javax.inject.jar (version 1) for RF? -->
          <artifact artifactId="jsr250-api" />
          <artifact artifactId="weld-servlet" />
          <artifact artifactId="weld-build-config" />
        </includes>
      </artifact:set>
    </copy>

    <!-- copy local modules -->
    <copy todir="${bundles}" overwrite="true">
      <artifact:set>
        <includes>
          <artifact artifactId="nuxeo-cdi-sample" />
        </includes>
      </artifact:set>
    </copy>

    <!-- copy customized templates for CDI -->
    <copy todir="${tomcatdir}/templates" overwrite="true">
      <fileset dir="src/main/resources/templates" />
    </copy>

    <chmod dir="${tomcatdir}/bin" perm="750" includes="*.sh,*ctl" />

    <zip destfile="${outdir}/nuxeo-cdi-${maven.project.version}-tomcat.zip"
      basedir="${stagedir}" includes="${tomcat}/**" />

    <artifact:attach
      file="${outdir}/${maven.project.artifactId}-${maven.project.version}-tomcat.zip"
      target="${maven.project.groupId}:${maven.project.artifactId}" type="zip" />

  </target>

  <target name="cleanstage">
    <delete dir="${stagedir}" />
  </target>

  <target name="cleanoutput">
    <delete dir="${tomcatdir}" />
  </target>

</project>
